<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beast beautitemplate='Standard' beautistatus='noAutoSetClockRate' 
    namespace="beast.core
    :beast.evolution.alignment
    :beast.evolution.tree.coalescent:beast.core.util
    :beast.evolution.nuc
    :beast.evolution.operators
    :beast.evolution.sitemodel
    :beast.evolution.substitutionmodel
    :beast.base.evolution.alignment
    :beast.pkgmgmt
    :beast.base.core
    :beast.base.inference
    :beast.base.evolution.tree.coalescent
    :beast.pkgmgmt
    :beast.base.core
    :beast.base.inference.util
    :beast.evolution.nuc
    :beast.base.evolution.operator
    :beast.base.evolution.operator.kernel
    :beast.base.inference.operator
    :beast.base.evolution.sitemodel
    :beast.base.evolution.substitutionmodel
    :beast.base.evolution.likelihood
    :bdmmprime.util.operators" required="BEAST.base v2.7.6:BDMM-Prime v1.0.0:SA v2.1.1" version="2.7">

    <data
id="moose_alignment_final"
spec="feast.fileio.AlignmentFromFasta"
fileName = "/data/moose_aligned_filtered.fasta"
name="alignment"/>

    

    <map name="Uniform" >beast.base.inference.distribution.Uniform</map>

    <map name="Exponential" >beast.base.inference.distribution.Exponential</map>

    <map name="LogNormal" >beast.base.inference.distribution.LogNormalDistributionModel</map>

    <map name="Normal" >beast.base.inference.distribution.Normal</map>

    <map name="Beta" >beast.base.inference.distribution.Beta</map>

    <map name="Gamma" >beast.base.inference.distribution.Gamma</map>

    <map name="LaplaceDistribution" >beast.base.inference.distribution.LaplaceDistribution</map>

    <map name="prior" >beast.base.inference.distribution.Prior</map>

    <map name="InverseGamma" >beast.base.inference.distribution.InverseGamma</map>

    <map name="OneOnX" >beast.base.inference.distribution.OneOnX</map>

    <run id="mcmc" spec="MCMC" chainLength="3000">
        <state id="state" spec="State" storeEvery="5000">
            <tree id="Tree.t:moose_alignment_final" spec="beast.base.evolution.tree.Tree" name="stateNode">
                <trait id="dateTrait.t:moose_alignment_final" spec="feast.fileio.TraitSetFromTaxonSet" 
                    dateFormat="yyyy-M-dd"
                    traitname="date" 
                    delimiter= "|"
                    takeGroup="2">
                    <taxa id="TaxonSet.moose_alignment_final" spec="TaxonSet">
                        <alignment idref="moose_alignment_final"/>
                    </taxa>
                </trait>
                <taxonset idref="TaxonSet.moose_alignment_final"/>
            </tree>
            <parameter id="kappa.s:moose_alignment_final" spec="parameter.RealParameter" lower="0.0" name="stateNode">2.0</parameter>
            <!-- <parameter id="freqParameter.s:moose_alignment_final" spec="parameter.RealParameter" dimension="4" lower="0.0" name="stateNode" upper="1.0">0.25</parameter> -->
            <parameter id="gammaShape.s:moose_alignment_final" spec="parameter.RealParameter" lower="0.1" name="stateNode">1.0</parameter>
            <parameter id="originBDMMPrime.t:moose_alignment_final" spec="parameter.RealParameter" name="stateNode">10.0</parameter>
            <parameter id="typeFrequencies.t:moose_alignment_final" spec="parameter.RealParameter" dimension="2" lower="0.0" name="stateNode" upper="1.0">0.5 0.5</parameter>
            <parameter id="R0Epi.t:moose_alignment_final" spec="parameter.RealParameter" lower="0.0" name="stateNode">1.0 1.0</parameter>
            <!--<parameter id="becomeUninfectiousRateEpi.t:moose_alignment_final" spec="parameter.RealParameter" lower="0.0" name="stateNode">1.0 1.0</parameter>-->
            <parameter id="samplingProportionEpi.t:moose_alignment_final" spec="parameter.RealParameter" dimension="4" lower="0.0" name="stateNode" upper="1.0">0.01 0.02 0.01 0.0 0.0 0.0</parameter>
            <!--<parameter id="clockRate.c:moose_alignment_final" spec="parameter.RealParameter" lower="0.0" name="stateNode">5.0E-4</parameter>-->
            <parameter id="R0AmongDemesEpi.t:moose_alignment_final" spec="parameter.RealParameter" lower="0.0" name="stateNode">1.0 1.0</parameter>
        </state>
        <init id="RandomTree.t:moose_alignment_final" spec="RandomTree" estimate="false" initial="@Tree.t:moose_alignment_final" taxa="@moose_alignment_final">
            <populationModel id="ConstantPopulation0.t:moose_alignment_final" spec="ConstantPopulation">
                <parameter id="randomPopSize.t:moose_alignment_final" spec="parameter.RealParameter" name="popSize">1.0</parameter>
            </populationModel>
        </init>
        <distribution id="posterior" spec="CompoundDistribution">
            <distribution id="prior" spec="CompoundDistribution">
                <distribution id="BDMMPrime.t:moose_alignment_final" spec="bdmmprime.distribution.BirthDeathMigrationDistribution" conditionOnSurvival="false" frequencies="@typeFrequencies.t:moose_alignment_final" tree="@Tree.t:moose_alignment_final">
                    <parameterization id="EpiBDMMPrimeParameterization.t:moose_alignment_final" spec="bdmmprime.parameterization.EpiParameterization" processLength="@originBDMMPrime.t:moose_alignment_final">
                        <R0 id="R0SVEpi.t:moose_alignment_final" spec="bdmmprime.parameterization.SkylineVectorParameter" processLength="@originBDMMPrime.t:moose_alignment_final" skylineValues="@R0Epi.t:moose_alignment_final" timesAreAges="true">
                            <typeSet id="typeSetBDMMPrime.t:moose_alignment_final" spec="bdmmprime.parameterization.TypeSet">
                                <typeTraitSet id="typeTraitSet.t:moose_alignment_final" spec="feast.fileio.TraitSetFromTaxonSet" 
                                    traitname="type" 
                                    delimiter="|" 
                                    takeGroup="1">    
                                    <taxa id="TaxonSet.1" spec="TaxonSet" alignment="@moose_alignment_final"/>
                                </typeTraitSet>
                            </typeSet>
                        </R0>
                        <becomeUninfectiousRate id="becomeUninfectiousRateSVEpi.t:moose_alignment_final" spec="bdmmprime.parameterization.SkylineVectorParameter" processLength="@originBDMMPrime.t:moose_alignment_final" timesAreAges="true" typeSet="@typeSetBDMMPrime.t:moose_alignment_final">
                            <parameter id="becomeUninfectiousRateEpi.t:432_H5N8_sud_ouest_HA_dup_final" spec="parameter.RealParameter" estimate="false" name="skylineValues">52 52</parameter>
                        </becomeUninfectiousRate>    
                        <samplingProportion id="samplingProportionSVEpi.t:moose_alignment_final" spec="bdmmprime.parameterization.SkylineVectorParameter" processLength="@originBDMMPrime.t:moose_alignment_final" skylineValues="@samplingProportionEpi.t:moose_alignment_final" timesAreAges="true" typeSet="@typeSetBDMMPrime.t:moose_alignment_final">
                            <parameter id="samplingProportionChangeTimesEpi.t:moose_alignment_final" spec="parameter.RealParameter" estimate="false" lower="0.0" name="changeTimes">1.9 3.45</parameter>
                        </samplingProportion>
                        <rhoSampling id="rhoSamplingProbTPEpi.t:moose_alignment_final" spec="bdmmprime.parameterization.TimedParameter" processLength="@originBDMMPrime.t:moose_alignment_final" timesAreAges="true" typeSet="@typeSetBDMMPrime.t:moose_alignment_final"/>
                        <removalProb id="removalProbSVEpi.t:moose_alignment_final" spec="bdmmprime.parameterization.SkylineVectorParameter" processLength="@originBDMMPrime.t:moose_alignment_final" timesAreAges="true" typeSet="@typeSetBDMMPrime.t:moose_alignment_final">
                            <parameter id="removalProbEpi.t:moose_alignment_final" spec="parameter.RealParameter" estimate="false" lower="0.0" name="skylineValues" upper="1.0">1.0</parameter>
                        </removalProb>
                        <!--<migrationRate id="migrationRateSMEpi.t:moose_alignment_final" spec="bdmmprime.parameterization.SkylineMatrixParameter" processLength="@originBDMMPrime.t:moose_alignment_final" timesAreAges="true" typeSet="@typeSetBDMMPrime.t:moose_alignment_final">
                            <parameter id="migrationRateEpi.t:moose_alignment_final" spec="parameter.RealParameter" estimate="false" lower="0.0" name="skylineValues">1.0</parameter>
                        </migrationRate>-->
                        <R0AmongDemes id="R0AmongDemesSMEpi.t:moose_alignment_final" spec="bdmmprime.parameterization.SkylineMatrixParameter" processLength="@originBDMMPrime.t:moose_alignment_final" skylineValues="@R0AmongDemesEpi.t:moose_alignment_final" timesAreAges="true" typeSet="@typeSetBDMMPrime.t:moose_alignment_final"/>
                        <typeSet idref="typeSetBDMMPrime.t:moose_alignment_final"/>
                    </parameterization>
                    <typeTraitSet idref="typeTraitSet.t:moose_alignment_final"/>
                </distribution>
                <distribution id="R0AmongDemesEpi_Camel_H" spec="bdmmprime.util.priors.ZeroExcludingPrior" x="@R0AmongDemesEpi.t:moose_alignment_final">
                    <LogNormal id="LogNormalDistributionModel.1" name="distr">
                        <parameter id="RealParameter.20" spec="parameter.RealParameter" estimate="false" name="M">1.0</parameter>
                        <parameter id="RealParameter.21" spec="parameter.RealParameter" estimate="false" lower="0.0" name="S" upper="5.0">1.0</parameter>
                    </LogNormal>
                </distribution>
                <distribution id="R0AmongDemesEpi_H_Camel" spec="bdmmprime.util.priors.ZeroExcludingPrior" x="@R0AmongDemesEpi.t:moose_alignment_final">
                    <LogNormal id="LogNormalDistributionModel.2" name="distr">
                        <parameter id="RealParameter.22" spec="parameter.RealParameter" estimate="false" name="M">1.0</parameter>
                        <parameter id="RealParameter.23" spec="parameter.RealParameter" estimate="false" lower="0.0" name="S" upper="5.0">1.0</parameter>
                    </LogNormal>
                </distribution>
                <distribution id="R0Epi_Camel" spec="bdmmprime.util.priors.ZeroExcludingPrior" x="@R0Epi.t:moose_alignment_final">
                    <LogNormal id="LogNormalDistributionModel.3" name="distr">
                        <parameter id="RealParameter.7" spec="parameter.RealParameter" estimate="false" name="M">1.0</parameter>
                        <parameter id="RealParameter.8" spec="parameter.RealParameter" estimate="false" lower="0.0" name="S" upper="5.0">1.0</parameter>
                    </LogNormal>
                </distribution>
                <distribution id="R0Epi_H" spec="bdmmprime.util.priors.ZeroExcludingPrior" x="@R0Epi.t:moose_alignment_final">
                    <LogNormal id="LogNormalDistributionModel.4" name="distr">
                        <parameter id="RealParameter.9" spec="parameter.RealParameter" estimate="false" name="M">1.0</parameter>
                        <parameter id="RealParameter.10" spec="parameter.RealParameter" estimate="false" lower="0.0" name="S" upper="5.0">1.0</parameter>
                    </LogNormal>
                </distribution>
                <!--<distribution id="becomeUninfectiousRateEpi_Camel" spec="bdmmprime.util.priors.ZeroExcludingPrior" x="@becomeUninfectiousRateEpi.t:moose_alignment_final">
                    <LogNormal id="LogNormalDistributionModel.5" meanInRealSpace="true" name="distr">
                        <parameter id="RealParameter.11" spec="parameter.RealParameter" estimate="false" name="M">52.0</parameter>
                        <parameter id="RealParameter.12" spec="parameter.RealParameter" estimate="false" lower="0.0" name="S" upper="5.0">1.0</parameter>
                    </LogNormal>
                </distribution>-->
                <!--<distribution id="becomeUninfectiousRateEpi_H" spec="bdmmprime.util.priors.ZeroExcludingPrior" x="@becomeUninfectiousRateEpi.t:moose_alignment_final">
                    <LogNormal id="LogNormalDistributionModel.6" meanInRealSpace="true" name="distr">
                        <parameter id="RealParameter.13" spec="parameter.RealParameter" estimate="false" name="M">52.0</parameter>
                        <parameter id="RealParameter.14" spec="parameter.RealParameter" estimate="false" lower="0.0" name="S" upper="5.0">1.0</parameter>
                    </LogNormal>
                </distribution>-->
                <!--<prior id="ClockPrior.c:moose_alignment_final" name="distribution" x="@clockRate.c:moose_alignment_final">
                    <LogNormal id="LogNormalDistributionModel.3" name="distr">
                        <parameter id="RealParameter.11" spec="parameter.RealParameter" estimate="false" name="M">5.0E-4</parameter>
                        <parameter id="RealParameter.12" spec="parameter.RealParameter" estimate="false" lower="0.0" name="S" upper="5.0">0.5</parameter>
                    </LogNormal>
                </prior>-->
<!--                 <prior id="FrequenciesPrior.s:moose_alignment_final" name="distribution" x="@freqParameter.s:moose_alignment_final">
                    <distr id="Dirichlet.0" spec="distribution.Dirichlet">
                        <parameter id="RealParameter.3" spec="parameter.RealParameter" dimension="4" estimate="false" name="alpha">4.0 4.0 4.0 4.0</parameter>
                    </distr>
                </prior> -->
                <prior id="GammaShapePrior.s:moose_alignment_final" name="distribution" x="@gammaShape.s:moose_alignment_final">
                    <Exponential id="Exponential.0" name="distr">
                        <parameter id="RealParameter.0" spec="parameter.RealParameter" estimate="false" name="mean">1.0</parameter>
                    </Exponential>
                </prior>
                <prior id="KappaPrior.s:moose_alignment_final" name="distribution" x="@kappa.s:moose_alignment_final">
                    <LogNormal id="LogNormalDistributionModel.0" name="distr">
                        <parameter id="RealParameter.1" spec="parameter.RealParameter" estimate="false" name="M">1.0</parameter>
                        <parameter id="RealParameter.2" spec="parameter.RealParameter" estimate="false" name="S">1.25</parameter>
                    </LogNormal>
                </prior>
                <prior id="originBDMMPrimePrior.t:moose_alignment_final" name="distribution" x="@originBDMMPrime.t:moose_alignment_final">
                    <LogNormal id="LogNormalDistributionModel.7" name="distr">
                        <parameter id="RealParameter.24" spec="parameter.RealParameter" estimate="false" name="M">1.0</parameter>
                        <parameter id="RealParameter.25" spec="parameter.RealParameter" estimate="false" lower="0.0" name="S" upper="5.0">1.0</parameter>
                    </LogNormal>
                </prior>
                <distribution id="samplingProportionEpi" spec="bdmmprime.util.priors.ZeroExcludingPrior" x="@samplingProportionEpi.t:moose_alignment_final">
                    <Uniform id="Uniform.3" lower="1.0E-5" name="distr" upper="0.1"/>
                </distribution>
                <!-- <distribution id="samplingProportionEpi_Camel" spec="bdmmprime.util.priors.ZeroExcludingPrior" x="@samplingProportionEpi.t:moose_alignment_final">
                    <Uniform id="Uniform.3" lower="1.0E-5" name="distr" upper="0.1"/>
                </distribution>
                <distribution id="samplingProportionEpi_H" spec="bdmmprime.util.priors.ZeroExcludingPrior" x="@samplingProportionEpi.t:moose_alignment_final">
                    <Uniform id="Uniform.4" lower="1.0E-5" name="distr" upper="0.1"/>
                </distribution> -->
            </distribution>
            <distribution id="likelihood" spec="CompoundDistribution" useThreads="true">
                <distribution id="treeLikelihood.moose_alignment_final" spec="ThreadedTreeLikelihood" data="@moose_alignment_final" tree="@Tree.t:moose_alignment_final">
                    <siteModel id="SiteModel.s:moose_alignment_final" spec="SiteModel" gammaCategoryCount="4" shape="@gammaShape.s:moose_alignment_final">
                        <parameter id="mutationRate.s:moose_alignment_final" spec="parameter.RealParameter" estimate="false" lower="0.0" name="mutationRate">1.0</parameter>
                        <parameter id="proportionInvariant.s:moose_alignment_final" spec="parameter.RealParameter" estimate="false" lower="0.0" name="proportionInvariant" upper="1.0">0.0</parameter>
                        <substModel id="hky.s:moose_alignment_final" spec="HKY" kappa="@kappa.s:moose_alignment_final">
                            <frequencies id="empiricalFreqs.s:moose_alignment_final" spec="Frequencies" data="@moose_alignment_final"/>
                        </substModel>
                    </siteModel>
                    <branchRateModel id="StrictClock.c:moose_alignment_final" spec="beast.base.evolution.branchratemodel.StrictClockModel">
                    <parameter id="clockRate.c:moose_alignment_final" spec="parameter.RealParameter" estimate="false" name="clock.rate">5.0E-4</parameter>
                </branchRateModel>
                </distribution>
            </distribution>
        </distribution>
<!--         <operator id="KappaScaler.s:moose_alignment_final" spec="AdaptableOperatorSampler" weight="0.05">
            <parameter idref="kappa.s:moose_alignment_final"/>
            <operator id="AVMNOperator.moose_alignment_final" spec="kernel.AdaptableVarianceMultivariateNormalOperator" allowNonsense="true" beta="0.05" burnin="400" initial="800" weight="0.1">
                <transformations id="AVMNSumTransform.moose_alignment_final" spec="operator.kernel.Transform$LogConstrainedSumTransform">
                    <f idref="freqParameter.s:moose_alignment_final"/>
                </transformations>
                <transformations id="AVMNLogTransform.moose_alignment_final" spec="operator.kernel.Transform$LogTransform">
                    <f idref="kappa.s:moose_alignment_final"/>
                    <f idref="gammaShape.s:moose_alignment_final"/> -->
                    <!--<f idref="clockRate.c:moose_alignment_final"/>-->
                <!-- </transformations>
                <transformations id="AVMNNoTransform.moose_alignment_final" spec="operator.kernel.Transform$NoTransform">
                    <f idref="Tree.t:moose_alignment_final"/>
                </transformations>
            </operator> -->
            <operator id="KappaScalerX.s:moose_alignment_final" spec="kernel.BactrianScaleOperator" parameter="@kappa.s:moose_alignment_final" scaleFactor="0.1" upper="10.0" weight="1"/>
        <!-- </operator> -->
        <!-- <operator id="FrequenciesExchanger.s:moose_alignment_final" spec="AdaptableOperatorSampler" weight="0.05">
            <parameter idref="freqParameter.s:moose_alignment_final"/>
            <operator idref="AVMNOperator.moose_alignment_final"/>
            <operator id="FrequenciesExchangerX.s:moose_alignment_final" spec="operator.kernel.BactrianDeltaExchangeOperator" delta="0.01" weight="0.1">
                <parameter idref="freqParameter.s:moose_alignment_final"/>
            </operator>
        </operator> -->
<!--         <operator id="gammaShapeScaler.s:moose_alignment_final" spec="AdaptableOperatorSampler" weight="0.05">
            <parameter idref="gammaShape.s:moose_alignment_final"/> -->
            <!-- <operator idref="AVMNOperator.moose_alignment_final"/> -->
            <operator id="gammaShapeScalerX.s:moose_alignment_final" spec="kernel.BactrianScaleOperator" parameter="@gammaShape.s:moose_alignment_final" scaleFactor="0.5" upper="10.0" weight="3"/>
        <!-- </operator> -->

        <operator id="BDMMPrimeTreeRootScaler" spec="BactrianScaleOperator" tree="@Tree.t:moose_alignment_final"  rootOnly="true" scaleFactor="0.25"  weight="5.0"/>
        <operator id="BDMMPrimeUniformOperator" spec="BactrianNodeOperator" tree="@Tree.t:moose_alignment_final"  weight="30.0"/>
        <operator id="BDMMPrimeSubtreeSlideScaler" spec="BactrianSubtreeSlide" tree="@Tree.t:moose_alignment_final"  weight="15.0"/>
        <operator id="BDMMPrimeNarrow" spec="Exchange" tree="@Tree.t:moose_alignment_final"  weight="15.0"/>
        <operator id="BDMMPrimeWide" spec="Exchange" tree="@Tree.t:moose_alignment_final"  isNarrow="false" weight="3.0"/>
        <operator id="BDMMPrimeWilsonBalding" spec="WilsonBalding" tree="@Tree.t:moose_alignment_final"   weight="3.0"/>
        <operator id="BDMMPrimeBICEPSEpochTop" spec="EpochFlexOperator" tree="@Tree.t:moose_alignment_final"  scaleFactor="0.1" weight="2.0"/>
        <operator id="BDMMPrimeBICEPSEpochAll" spec="EpochFlexOperator" tree="@Tree.t:moose_alignment_final"   fromOldestTipOnly="false" scaleFactor="0.1" weight="2.0"/>
        <operator id="BDMMPrimeBICEPSTreeFlex" spec="TreeStretchOperator" tree="@Tree.t:moose_alignment_final" scaleFactor="0.01" weight="2.0"/>

        <operator id="originBDMMPrimeScaler.t:moose_alignment_final" spec="ScaleOperator" parameter="@originBDMMPrime.t:moose_alignment_final" weight="3.0"/>
        <operator id="typeFrequenciesExchanger.t:moose_alignment_final" spec="operator.DeltaExchangeOperator" delta="0.1" weight="1.0">
            <parameter idref="typeFrequencies.t:moose_alignment_final"/>
        </operator>
        <operator id="R0EpiScaler.t:moose_alignment_final" spec="ScaleOperator" parameter="@R0Epi.t:moose_alignment_final" weight="3.0"/>
        <!--<operator id="becomeUninfectiousRateEpiScaler.t:moose_alignment_final" spec="ScaleOperator" parameter="@becomeUninfectiousRateEpi.t:moose_alignment_final" weight="3.0"/>-->
        <operator id="samplingProportionEpiScaler.t:moose_alignment_final" spec="SmartScaleOperator" parameter="@samplingProportionEpi.t:moose_alignment_final" weight="3.0"/>
        <!--<operator id="StrictClockRateScaler.c:moose_alignment_final" spec="AdaptableOperatorSampler" weight="1.5">
            <parameter idref="clockRate.c:moose_alignment_final"/>
            <operator idref="AVMNOperator.moose_alignment_final"/>
            <operator id="StrictClockRateScalerX.c:moose_alignment_final" spec="kernel.BactrianScaleOperator" parameter="@clockRate.c:moose_alignment_final" upper="10.0" weight="3.0"/>
        </operator>
        <operator id="strictClockUpDownOperator.c:moose_alignment_final" spec="AdaptableOperatorSampler" weight="1.5">
            <parameter idref="clockRate.c:moose_alignment_final"/>
            <tree idref="Tree.t:moose_alignment_final"/>
            <operator idref="AVMNOperator.moose_alignment_final"/>
            <operator id="strictClockUpDownOperatorX.c:moose_alignment_final" spec="operator.kernel.BactrianUpDownOperator" scaleFactor="0.75" weight="3.0">
                <up idref="clockRate.c:moose_alignment_final"/>
                <down idref="Tree.t:moose_alignment_final"/>
            </operator>
        </operator>-->
        <operator id="R0AmongDemesEpiScaler.t:moose_alignment_final" spec="ScaleOperator" parameter="@R0AmongDemesEpi.t:moose_alignment_final" weight="3.0"/>
        <logger id="tracelog" spec="Logger" fileName="$(filebase).log" logEvery="5000" model="@posterior" sanitiseHeaders="true" sort="smart">
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log idref="prior"/>
            <log idref="treeLikelihood.moose_alignment_final"/>
            <log id="TreeHeight.t:moose_alignment_final" spec="beast.base.evolution.tree.TreeStatLogger" tree="@Tree.t:moose_alignment_final"/>
            <log idref="kappa.s:moose_alignment_final"/>
            <!-- <log idref="freqParameter.s:moose_alignment_final"/> -->
            <log idref="gammaShape.s:moose_alignment_final"/>
            <log idref="originBDMMPrime.t:moose_alignment_final"/>
            <log idref="typeFrequencies.t:moose_alignment_final"/>
            <log id="typedTreeStats.t:moose_alignment_final" spec="bdmmprime.mapping.TypedTreeStatsLogger" includeRootEdge="true" typeLabel="type" typeSet="@typeSetBDMMPrime.t:moose_alignment_final">
                <typedTree id="typeMappedTree.t:moose_alignment_final" spec="bdmmprime.mapping.TypeMappedTree" bdmmDistrib="@BDMMPrime.t:moose_alignment_final" frequencies="@typeFrequencies.t:moose_alignment_final" mapOnInit="false" remapOnLog="true" typeLabel="type" typeTraitSet="@typeTraitSet.t:moose_alignment_final" untypedTree="@Tree.t:moose_alignment_final"/>
            </log>
            <log idref="R0SVEpi.t:moose_alignment_final"/>
            <log idref="R0AmongDemesSMEpi.t:moose_alignment_final"/>
            <log idref="becomeUninfectiousRateSVEpi.t:moose_alignment_final"/>
            <log idref="samplingProportionSVEpi.t:moose_alignment_final"/>
            <log idref="removalProbSVEpi.t:moose_alignment_final"/>
            <log idref="rhoSamplingProbTPEpi.t:moose_alignment_final"/>
            <log idref="clockRate.c:moose_alignment_final"/>
        </logger>
        <logger id="screenlog" spec="Logger" logEvery="100">
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log idref="prior"/>
            <log idref="clockRate.c:moose_alignment_final"/>
            <log idref="R0SVEpi.t:moose_alignment_final"/>
            <log idref="R0AmongDemesSMEpi.t:moose_alignment_final"/>
            <log idref="samplingProportionSVEpi.t:moose_alignment_final"/>
            <log idref="becomeUninfectiousRateSVEpi.t:moose_alignment_final"/>

        </logger>
        <logger id="treelog.t:moose_alignment_final" spec="Logger" fileName="$(filebase)-$(tree).trees" logEvery="5000" mode="tree">
            <log id="TreeWithMetaDataLogger.t:moose_alignment_final" spec="beast.base.evolution.TreeWithMetaDataLogger" tree="@Tree.t:moose_alignment_final"/>
        </logger>
        <logger id="typedTreeLogger.t:moose_alignment_final" spec="bdmmprime.util.OptionalLogger" enableLogger="true" fileName="$(filebase).$(tree).typed.trees" logEvery="5000" mode="tree">
            <log idref="typeMappedTree.t:moose_alignment_final"/>
        </logger>
        <logger id="nodeTypedTreeLogger.t:moose_alignment_final" spec="bdmmprime.util.OptionalLogger" enableLogger="true" fileName="$(filebase).$(tree).typed.node.trees" logEvery="5000" mode="tree">
            <log id="nodeTypedTree.t:moose_alignment_final" spec="bdmmprime.mapping.TypedNodeTreeLogger" typedTree="@typeMappedTree.t:moose_alignment_final"/>
        </logger>
<!--         <logger id="trajLogger.t:moose_alignment_final" spec="bdmmprime.util.OptionalLogger" fileName="$(filebase).$(tree).traj" logEvery="5000">
            <log id="typedTraj.t:moose_alignment_final" spec="bdmmprime.trajectories.SampledTrajectory" bdmmDistrib="@BDMMPrime.t:moose_alignment_final" frequencies="@typeFrequencies.t:moose_alignment_final" typeMappedTree="@typeMappedTree.t:moose_alignment_final" useTauLeaping="true"/>
        </logger> -->
        <operatorschedule id="OperatorSchedule" spec="OperatorSchedule"/>
    </run>

</beast>
